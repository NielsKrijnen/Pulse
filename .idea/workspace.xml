<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="cf331160-0c39-4467-a87c-ea41b8186186" name="Changes" comment="Update worker job for Docker image building and deployment&#10;&#10;- Add logic to pull the base Docker image (`docker:24-dind`) if not available.&#10;- Implement repository cloning, Docker image building, and deployment process in job tasks.&#10;- Update `.gitignore` and adjust IntelliJ configuration files.&#10;- Modify worker service to include Docker build logs and enhanced container configuration.">
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/worker/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/services/worker/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/worker/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/services/worker/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/worker/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/services/worker/src/index.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="package.json" />
        <option value="tsconfig.json" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="false" />
    <option name="myAllFileTypesSelected" value="true" />
    <option name="mySelectedFileTypes">
      <set />
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;NielsKrijnen&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/NielsKrijnen/Pulse.git",
    "accountId": "d1735b39-0ef4-4fdb-be54-aa782b4d6c3f"
  }
}]]></component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="32s8ItSpS1E41sfA1yIzoDpCgdE" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_MARK_IGNORED_FILES_AS_EXCLUDED": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Docker.Development.executor": "Run",
    "Docker.Docker Image.executor": "Run",
    "Docker.Production.executor": "Run",
    "Docker.docker-compose.dev.yml.redis: Compose Deployment.executor": "Run",
    "Docker.docker-compose.dev.yml: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Node.js.index.ts.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHELLCHECK.PATH": "I do mind",
    "git-widget-placeholder": "new-worker",
    "ignore.virus.scanning.warn.message": "true",
    "junie.onboarding.icon.badge.shown": "true",
    "last_opened_file_path": "/home/niels/dev/Pulse/docker-compose.yml",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "npm.dev.executor": "Run",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "to.speed.mode.migration.done": "true",
    "ts.external.directory.path": "/home/niels/dev/Pulse/services/api/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/services/worker" />
      <recent name="$PROJECT_DIR$/apps/dashboard" />
      <recent name="$PROJECT_DIR$/services/api" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.Development">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-image" temporary="true">
      <deployment type="docker-image">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Production" />
      <item itemvalue="Docker.Development" />
    </list>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-9c94529fcfe0-JavaScript-WS-252.26199.162" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="cf331160-0c39-4467-a87c-ea41b8186186" name="Changes" comment="" />
      <created>1758197843264</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1758197843264</updated>
      <workItem from="1758197844270" duration="11000" />
      <workItem from="1758197873262" duration="5402000" />
      <workItem from="1758386926145" duration="5906000" />
      <workItem from="1758468204558" duration="6125000" />
    </task>
    <task id="LOCAL-00001" summary="Initial Commit">
      <option name="closed" value="true" />
      <created>1758197978484</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1758197978484</updated>
    </task>
    <task id="LOCAL-00002" summary="Setup">
      <option name="closed" value="true" />
      <created>1758203613815</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1758203613815</updated>
    </task>
    <task id="LOCAL-00003" summary="Add IntelliJ IDEA data sources configuration for PostgreSQL setup">
      <option name="closed" value="true" />
      <created>1758205215072</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1758205215072</updated>
    </task>
    <task id="LOCAL-00004" summary="Refactor API entrypoint process and update configuration for Docker and Prisma">
      <option name="closed" value="true" />
      <created>1758389593954</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1758389593954</updated>
    </task>
    <task id="LOCAL-00005" summary="Add CRUD endpoints, input validation, and password hashing for users; update dependencies and Docker health checks">
      <option name="closed" value="true" />
      <created>1758391723612</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1758391723612</updated>
    </task>
    <task id="LOCAL-00006" summary="Add Redis service and BullMQ; improve health checks and dependencies&#10;&#10;- Introduce Redis service in `docker-compose.yml`.&#10;- Add BullMQ library to `api` and `worker` services for job queue processing.&#10;- Enhance Docker health checks for PostgreSQL and dependency handling. &#10;- Update package dependencies in both `api` and `worker` services.">
      <option name="closed" value="true" />
      <created>1758392905305</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1758392905305</updated>
    </task>
    <task id="LOCAL-00007" summary="Add deployment job processing using BullMQ and Docker integration&#10;&#10;- Extend job schema with deployment details (`repository`, `branch`).&#10;- Implement worker logic for building Docker images using deployment data.&#10;- Update `docker-compose` to include necessary tools for running Docker commands in the worker service.">
      <option name="closed" value="true" />
      <created>1758471051564</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1758471051564</updated>
    </task>
    <option name="localTasksCounter" value="8" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial Commit" />
    <MESSAGE value="Setup" />
    <MESSAGE value="Add IntelliJ IDEA data sources configuration for PostgreSQL setup" />
    <MESSAGE value="Refactor API entrypoint process and update configuration for Docker and Prisma" />
    <MESSAGE value="Add CRUD endpoints, input validation, and password hashing for users; update dependencies and Docker health checks" />
    <MESSAGE value="Add Redis service and BullMQ; improve health checks and dependencies&#10;&#10;- Introduce Redis service in `docker-compose.yml`.&#10;- Add BullMQ library to `api` and `worker` services for job queue processing.&#10;- Enhance Docker health checks for PostgreSQL and dependency handling. &#10;- Update package dependencies in both `api` and `worker` services." />
    <MESSAGE value="Add deployment job processing using BullMQ and Docker integration&#10;&#10;- Extend job schema with deployment details (`repository`, `branch`).&#10;- Implement worker logic for building Docker images using deployment data.&#10;- Update `docker-compose` to include necessary tools for running Docker commands in the worker service." />
    <MESSAGE value="Update worker job for Docker image building and deployment&#10;&#10;- Add logic to pull the base Docker image (`docker:24-dind`) if not available.&#10;- Implement repository cloning, Docker image building, and deployment process in job tasks.&#10;- Update `.gitignore` and adjust IntelliJ configuration files.&#10;- Modify worker service to include Docker build logs and enhanced container configuration." />
    <option name="LAST_COMMIT_MESSAGE" value="Update worker job for Docker image building and deployment&#10;&#10;- Add logic to pull the base Docker image (`docker:24-dind`) if not available.&#10;- Implement repository cloning, Docker image building, and deployment process in job tasks.&#10;- Update `.gitignore` and adjust IntelliJ configuration files.&#10;- Modify worker service to include Docker build logs and enhanced container configuration." />
  </component>
</project>