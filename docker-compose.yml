services:
  proxy:
    image: traefik:v3.1
    command:
      - "--api.insecure=true" # disable in production
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=admin@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/letsencrypt:/letsencrypt"
    networks:
      - pulse

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: pulse
      POSTGRES_PASSWORD: pulse
      POSTGRES_DB: pulse
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - pulse

  api:
    build: ./services/api
    environment:
      DATABASE_URL: postgres://pulse:pulse@db:5432/pulse
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
    networks:
      - pulse

  dashboard:
    build: ./apps/dashboard
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`pulse.localhost`)"
      - "traefik.http.services.dashboard.loadbalancer.server.port=3000"
    networks:
      - pulse

  worker:
    build: ./services/worker
    environment:
      DATABASE_URL: postgres://pulse:pulse@db:5432/pulse
      DOCKER_HOST: tcp://docker:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - api
      - db
    networks:
      - pulse

networks:
  pulse:
    driver: bridge