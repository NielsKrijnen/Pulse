services:
  api:
    image: node:20
    command: >
      sh -c "npm run prisma:deploy && npm run prisma:generate && npm run dev"
    working_dir: /app
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./services/api:/app
    ports:
      - "3000:3000"

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 2s
      retries: 20

  worker:
    image: node:20-alpine
    command: >
      sh -c "apk add --no-cache docker-cli git && npm run dev"
    working_dir: /app
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis
    volumes:
      - ./services/worker:/app
      - /var/run/docker.sock:/var/run/docker.sock

  redis:
    image: redis

  proxy:
    image: traefik:v3.5.2
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.email=admin@pulse.app"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/letsencrypt:/letsencrypt
